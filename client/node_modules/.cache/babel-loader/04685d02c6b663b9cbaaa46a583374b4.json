{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSapshotToMap(snapshot); //   updateCollection(collectionMap);\n\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/torrent/code/nz-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACpCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADc,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,aAAD,KAAoB;AACvDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADiC;AAEvDC,EAAAA,OAAO,EAAEF;AAF8C,CAApB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAkB;AACrDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD+B;AAErDH,EAAAA,OAAO,EAAEE;AAF4C,CAAlB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAQ,IAAI;AACpC,YAAMZ,aAAa,GAAGL,8BAA8B,CAACiB,QAAD,CAApD,CADoC,CAEtC;;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,aAAD,CAAxB,CAAR;AAEC,KALD,EAKGa,KALH,CAKSC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAL1B;AAMH,GATD;AAUH,CAXM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSapshotToMap} from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n        type: ShopActionTypes.FETCH_COLLECTIONS_START\n    });\n\nexport const fetchCollectionsSuccess = (collectionMap) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionMap\n})\n\nexport const fetchCollectionsFailure = (errorMessage) =>({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart());\n        collectionRef.get().then( snapshot => {\n          const collectionMap = convertCollectionsSapshotToMap(snapshot);\n        //   updateCollection(collectionMap);\n        dispatch(fetchCollectionsSuccess(collectionMap))\n          \n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)) );\n    }\n}"]},"metadata":{},"sourceType":"module"}