{"ast":null,"code":"import _objectSpread from \"/Users/torrent/code/nz-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDM9o5GTokE9FbTqQ9aLSj0WuQ5aTVYPb0\",\n  authDomain: \"nz-db-9c284.firebaseapp.com\",\n  databaseURL: \"https://nz-db-9c284.firebaseio.com\",\n  projectId: \"nz-db-9c284\",\n  storageBucket: \"nz-db-9c284.appspot.com\",\n  messagingSenderId: \"648810017281\",\n  appId: \"1:648810017281:web:3f7fa420629a8b0c104600\",\n  measurementId: \"G-78F8EF886H\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nconst convertCollectionsSapshotToMap = collections => {\n  const transformCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLower)\n    };\n  });\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/torrent/code/nz-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","convertCollectionsSapshotToMap","collections","transformCollection","docs","map","data","title","items","routeName","encodeURI","toLower","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAI;AACZC,EAAAA,MAAM,EAAE,yCADI;AAEZC,EAAAA,UAAU,EAAE,6BAFA;AAGZC,EAAAA,WAAW,EAAE,oCAHD;AAIZC,EAAAA,SAAS,EAAE,aAJC;AAKZC,EAAAA,aAAa,EAAE,yBALH;AAMZC,EAAAA,iBAAiB,EAAE,cANP;AAOZC,EAAAA,KAAK,EAAE,2CAPK;AAQZC,EAAAA,aAAa,EAAE;AARH,CAAhB;AAYET,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,UACZC,WADY,GACWT,QADX,CACZS,WADY;AAAA,UACCC,KADD,GACWV,QADX,CACCU,KADD;AAEpB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDV,cAJC,EAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AAED,SAAOf,OAAP;AACD,CAvBM;;AAyBP,MAAMgB,8BAA8B,GAAGC,WAAW,IAAI;AAClD,QAAMC,mBAAmB,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAuBlB,GAAG,IAAI;AAAA,sBAChCA,GAAG,CAACmB,IAAJ,EADgC;AAAA,UAChDC,KADgD,aAChDA,KADgD;AAAA,UACzCC,KADyC,aACzCA,KADyC;;AAExD,WAAO;AACHC,MAAAA,SAAS,EAAEC,SAAS,CAAEH,KAAK,CAACI,OAAR;AADjB,KAAP;AAGC,GALyB,CAA5B;AAOH,CARD;;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAQC,aAAR,EAAuBC,YAAvB,KAAwC;AAC7E,QAAMC,aAAa,GAAG7B,SAAS,CAAC8B,UAAV,CAAqBH,aAArB,CAAtB;AACA,QAAMI,KAAK,GAAG/B,SAAS,CAAC+B,KAAV,EAAd;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAsBC,GAAG,IAAI;AACzB,UAAMC,SAAS,GAAGL,aAAa,CAAC5B,GAAd,EAAlB;AACA8B,IAAAA,KAAK,CAACrB,GAAN,CAAUwB,SAAV,EAAqBD,GAArB;AACH,GAHD;AAKA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACH,CATM;AAWP,OAAO,MAAMC,IAAI,GAAGnD,QAAQ,CAACmD,IAAT,EAAb;AACP,OAAO,MAAMpC,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMqC,QAAQ,GAAG,IAAIpD,QAAQ,CAACmD,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAepD,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config =  {\n    apiKey: \"AIzaSyDM9o5GTokE9FbTqQ9aLSj0WuQ5aTVYPb0\",\n    authDomain: \"nz-db-9c284.firebaseapp.com\",\n    databaseURL: \"https://nz-db-9c284.firebaseio.com\",\n    projectId: \"nz-db-9c284\",\n    storageBucket: \"nz-db-9c284.appspot.com\",\n    messagingSenderId: \"648810017281\",\n    appId: \"1:648810017281:web:3f7fa420629a8b0c104600\",\n    measurementId: \"G-78F8EF886H\"\n  };\n\n\n  firebase.initializeApp(config);\n\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n  \n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n  \n    const snapShot = await userRef.get();\n  \n    if (!snapShot.exists) {\n      const { displayName, email } = userAuth;\n      const createdAt = new Date();\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...additionalData\n        });\n      } catch (error) {\n        console.log('error creating user', error.message);\n      }\n    }\n  \n    return userRef;\n  };\n\n  const convertCollectionsSapshotToMap = collections => {\n      const transformCollection = collections.docs.map(  doc => {\n        const { title, items} = doc.data();\n        return {\n            routeName: encodeURI( title.toLower)\n        }\n        }   \n      );\n  };\n\n  export const addCollectionAndDocuments = async ( collectionKey, objectsToAdd) => {\n      const collectionRef = firestore.collection(collectionKey);\n      const batch = firestore.batch()\n      objectsToAdd.forEach( obj => {\n          const newDocRef = collectionRef.doc();\n          batch.set(newDocRef, obj);\n      });\n\n      return await batch.commit();\n  };\n  \n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n  \n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({ prompt: 'select_account' });\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\n  \n  export default firebase;"]},"metadata":{},"sourceType":"module"}