{"ast":null,"code":"import _objectSpread from \"/Users/torrent/code/nz-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDM9o5GTokE9FbTqQ9aLSj0WuQ5aTVYPb0\",\n  authDomain: \"nz-db-9c284.firebaseapp.com\",\n  databaseURL: \"https://nz-db-9c284.firebaseio.com\",\n  projectId: \"nz-db-9c284\",\n  storageBucket: \"nz-db-9c284.appspot.com\",\n  messagingSenderId: \"648810017281\",\n  appId: \"1:648810017281:web:3f7fa420629a8b0c104600\",\n  measurementId: \"G-78F8EF886H\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const getUserCartRef = async userId => {\n  const cartsRef = firestore.collection('carts').where('userId', '==', userId);\n  const snapShot = await cartsRef.get();\n\n  if (snapShot.empty) {\n    const cartDocRef = firestore.collection('carts').doc();\n    await cartDocRef.set({\n      userId,\n      cartItems: []\n    });\n    return cartDocRef;\n  } else {\n    return snapShot.docs[0].ref;\n  }\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/Users/torrent/code/nz-clothing/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","getUserCartRef","userId","cartsRef","collection","where","empty","cartDocRef","cartItems","docs","ref","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,MAAMC,MAAM,GAAI;AACdC,EAAAA,MAAM,EAAE,yCADM;AAEdC,EAAAA,UAAU,EAAE,6BAFE;AAGdC,EAAAA,WAAW,EAAE,oCAHC;AAIdC,EAAAA,SAAS,EAAE,aAJG;AAKdC,EAAAA,aAAa,EAAE,yBALD;AAMdC,EAAAA,iBAAiB,EAAE,cANL;AAOdC,EAAAA,KAAK,EAAE,2CAPO;AAQdC,EAAAA,aAAa,EAAE;AARD,CAAhB;AAWET,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,UACZC,WADY,GACWT,QADX,CACZS,WADY;AAAA,UACCC,KADD,GACWV,QADX,CACCU,KADD;AAEpB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDV,cAJC,EAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AAED,SAAOf,OAAP;AACD,CAvBM;AAyBP,OAAO,MAAMgB,cAAc,GAAG,MAAMC,MAAN,IAAgB;AAC5C,QAAMC,QAAQ,GAAGjB,SAAS,CAACkB,UAAV,CAAqB,OAArB,EAA8BC,KAA9B,CAAoC,QAApC,EAA8C,IAA9C,EAAoDH,MAApD,CAAjB;AACA,QAAMb,QAAQ,GAAG,MAAMc,QAAQ,CAACb,GAAT,EAAvB;;AAEA,MAAID,QAAQ,CAACiB,KAAb,EAAoB;AAClB,UAAMC,UAAU,GAAGrB,SAAS,CAACkB,UAAV,CAAqB,OAArB,EAA8BjB,GAA9B,EAAnB;AACA,UAAMoB,UAAU,CAACX,GAAX,CAAe;AAAEM,MAAAA,MAAF;AAAUM,MAAAA,SAAS,EAAE;AAArB,KAAf,CAAN;AACA,WAAOD,UAAP;AACD,GAJD,MAIO;AACL,WAAOlB,QAAQ,CAACoB,IAAT,CAAc,CAAd,EAAiBC,GAAxB;AACD;AACF,CAXM;AAaP,OAAO,MAAMC,yBAAyB,GAAG,OACvCC,aADuC,EAEvCC,YAFuC,KAGpC;AACH,QAAMC,aAAa,GAAG5B,SAAS,CAACkB,UAAV,CAAqBQ,aAArB,CAAtB;AAEA,QAAMG,KAAK,GAAG7B,SAAS,CAAC6B,KAAV,EAAd;AACAF,EAAAA,YAAY,CAACG,OAAb,CAAqBC,GAAG,IAAI;AAC1B,UAAMC,SAAS,GAAGJ,aAAa,CAAC3B,GAAd,EAAlB;AACA4B,IAAAA,KAAK,CAACnB,GAAN,CAAUsB,SAAV,EAAqBD,GAArB;AACD,GAHD;AAKA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACD,CAbM;AAeP,OAAO,MAAMC,+BAA+B,GAAGC,WAAW,IAAI;AAC5D,QAAMC,qBAAqB,GAAGD,WAAW,CAACZ,IAAZ,CAAiBc,GAAjB,CAAqBpC,GAAG,IAAI;AAAA,sBAC/BA,GAAG,CAACqC,IAAJ,EAD+B;AAAA,UAChDC,KADgD,aAChDA,KADgD;AAAA,UACzCC,KADyC,aACzCA,KADyC;;AAGxD,WAAO;AACLC,MAAAA,SAAS,EAAEC,SAAS,CAACH,KAAK,CAACI,WAAN,EAAD,CADf;AAELC,MAAAA,EAAE,EAAE3C,GAAG,CAAC2C,EAFH;AAGLL,MAAAA,KAHK;AAILC,MAAAA;AAJK,KAAP;AAMD,GAT6B,CAA9B;AAWA,SAAOJ,qBAAqB,CAACS,MAAtB,CAA6B,CAACC,WAAD,EAAc5B,UAAd,KAA6B;AAC/D4B,IAAAA,WAAW,CAAC5B,UAAU,CAACqB,KAAX,CAAiBI,WAAjB,EAAD,CAAX,GAA8CzB,UAA9C;AACA,WAAO4B,WAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID,CAhBM;AAkBP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,WAAW,GAAGC,IAAI,CAACC,kBAAL,CAAwBxD,QAAQ,IAAI;AACtDsD,MAAAA,WAAW;AACXF,MAAAA,OAAO,CAACpD,QAAD,CAAP;AACD,KAHmB,EAGjBqD,MAHiB,CAApB;AAID,GALM,CAAP;AAMD,CAPM;AASP,OAAO,MAAME,IAAI,GAAGnE,QAAQ,CAACmE,IAAT,EAAb;AACP,OAAO,MAAMpD,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,OAAO,MAAMsD,cAAc,GAAG,IAAIrE,QAAQ,CAACmE,IAAT,CAAcG,kBAAlB,EAAvB;AACPD,cAAc,CAACE,mBAAf,CAAmC;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAnC;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBL,cAArB,CAA/B;AAEP,eAAerE,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nconst config =  {\n  apiKey: \"AIzaSyDM9o5GTokE9FbTqQ9aLSj0WuQ5aTVYPb0\",\n  authDomain: \"nz-db-9c284.firebaseapp.com\",\n  databaseURL: \"https://nz-db-9c284.firebaseio.com\",\n  projectId: \"nz-db-9c284\",\n  storageBucket: \"nz-db-9c284.appspot.com\",\n  messagingSenderId: \"648810017281\",\n  appId: \"1:648810017281:web:3f7fa420629a8b0c104600\",\n  measurementId: \"G-78F8EF886H\"\n};\n\n  firebase.initializeApp(config);\n\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n  \n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n  \n    const snapShot = await userRef.get();\n  \n    if (!snapShot.exists) {\n      const { displayName, email } = userAuth;\n      const createdAt = new Date();\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...additionalData\n        });\n      } catch (error) {\n        console.log('error creating user', error.message);\n      }\n    }\n  \n    return userRef;\n  };\n\n  export const getUserCartRef = async userId => {\n    const cartsRef = firestore.collection('carts').where('userId', '==', userId);\n    const snapShot = await cartsRef.get();\n  \n    if (snapShot.empty) {\n      const cartDocRef = firestore.collection('carts').doc();\n      await cartDocRef.set({ userId, cartItems: [] });\n      return cartDocRef;\n    } else {\n      return snapShot.docs[0].ref;\n    }\n  };\n  \n  export const addCollectionAndDocuments = async (\n    collectionKey,\n    objectsToAdd\n  ) => {\n    const collectionRef = firestore.collection(collectionKey);\n  \n    const batch = firestore.batch();\n    objectsToAdd.forEach(obj => {\n      const newDocRef = collectionRef.doc();\n      batch.set(newDocRef, obj);\n    });\n  \n    return await batch.commit();\n  };\n  \n  export const convertCollectionsSnapshotToMap = collections => {\n    const transformedCollection = collections.docs.map(doc => {\n      const { title, items } = doc.data();\n  \n      return {\n        routeName: encodeURI(title.toLowerCase()),\n        id: doc.id,\n        title,\n        items\n      };\n    });\n  \n    return transformedCollection.reduce((accumulator, collection) => {\n      accumulator[collection.title.toLowerCase()] = collection;\n      return accumulator;\n    }, {});\n  };\n  \n  export const getCurrentUser = () => {\n    return new Promise((resolve, reject) => {\n      const unsubscribe = auth.onAuthStateChanged(userAuth => {\n        unsubscribe();\n        resolve(userAuth);\n      }, reject);\n    });\n  };\n  \n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n  \n  export const googleProvider = new firebase.auth.GoogleAuthProvider();\n  googleProvider.setCustomParameters({ prompt: 'select_account' });\n  export const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n  \n  export default firebase;"]},"metadata":{},"sourceType":"module"}