{"ast":null,"code":"import _objectSpread from \"/Users/torrent/code/nz-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.type';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshopFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshopFromUserAuth(user);\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshopFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshopFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {} catch (error) {\n    yield put(signOutFailure(error));\n  }\n\n  yield auth.signOut();\n  yield put(signOut);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated)]);\n}","map":{"version":3,"sources":["/Users/torrent/code/nz-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","userActionTypes","signInSuccess","signInFailure","signOutFailure","signOutSuccess","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshopFromUserAuth","userAuth","userRef","user","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSaga"],"mappings":";AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA+BC,IAA/B,QAA0C,oBAA1C;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,cAAvC,EAAuDC,cAAvD,QAA4E,gBAA5E;AAEA,SAASC,IAAT,EAAgBC,cAAhB,EAAgCC,yBAAhC,EAA2DC,cAA3D,QAAgF,+BAAhF;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA2C;AAC9C,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BK,IAA5B,CAA1B;AACA,UAAMC,YAAY,GAAG,MAAMF,OAAO,CAACG,GAAR,EAA3B;AACA,UAAMjB,GAAG,CACLI,aAAa;AAAGc,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EADR,CAAT;AAGH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACK,aAAa,CAACe,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAG;AAAA,iBACoB,MAAMb,IAAI,CAACc,eAAL,CAAqBb,cAArB,CAD1B;AAAA,UACYM,IADZ,QACYA,IADZ;;AAEK,UAAMH,uBAAuB,CAACG,IAAD,CAA7B;AACA,UAAMf,GAAG,CACLI,aAAa;AAAGc,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EADR,CAAT;AAGP,GAND,CAMC,OAAMC,KAAN,EAAY;AACT,UAAMpB,GAAG,CAAEK,aAAa,CAACe,KAAD,CAAf,CAAT;AACH;AACJ;AAGD,OAAO,UAAUG,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAV,CAA1B,EAAyD;AAC5D,MAAI;AAAA,kBACiB,MAAMlB,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADvB;AAAA,UACQX,IADR,SACQA,IADR;;AAEA,UAAMH,uBAAuB,CAACG,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOK,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACK,aAAa,CAACe,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUQ,mBAAV,GAA+B;AAClC,MAAI;AACA,UAAMf,QAAQ,GAAG,MAAMF,cAAc,EAArC;AACA,QAAG,CAACE,QAAJ,EAAa;AACb,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACH,GAJD,CAIE,OAAOO,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACK,aAAa,CAACe,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUS,OAAV,GAAmB;AACtB,MAAI,CAEH,CAFD,CAEE,OAAOT,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACM,cAAc,CAACc,KAAD,CAAf,CAAT;AACH;;AACD,QAAMZ,IAAI,CAACqB,OAAL,EAAN;AACA,QAAM7B,GAAG,CAAC6B,OAAD,CAAT;AACH;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAM/B,UAAU,CAACI,eAAe,CAAC4B,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUW,kBAAV,GAA+B;AAClC,QAAMjC,UAAU,CAACI,eAAe,CAAC8B,mBAAjB,EAAsCV,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUW,kBAAV,GAA+B;AAClC,QAAMnC,UAAU,CAACI,eAAe,CAACgC,kBAAjB,EAAqCP,mBAArC,CAAhB;AACH;AAED,OAAO,UAAUQ,cAAV,GAA0B;AAC7B,QAAMrC,UAAU,CAACI,eAAe,CAACkC,cAAjB,CAAhB;AACH;AAED,OAAO,UAAUC,QAAV,GAAoB;AAC3B,QAAMrC,GAAG,CAAC,CAACC,IAAI,CAAC4B,mBAAD,CAAL,EAA4B5B,IAAI,CAAC8B,kBAAD,CAAhC,EAAsD9B,IAAI,CAAC0B,mBAAD,CAA1D,CAAD,CAAT;AACC","sourcesContent":["import {takeLatest, put, all , call} from 'redux-saga/effects';\n\nimport userActionTypes from './user.type'\n\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess} from './user.actions'\n\nimport { auth , googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils';\n\nexport function* getSnapshopFromUserAuth(userAuth){\n    try{\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n        );\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* signInWithGoogle() {\n    try{\n            const {user} = yield auth.signInWithPopup(googleProvider);\n            yield getSnapshopFromUserAuth(user);\n            yield put(\n                signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n            );\n    }catch(error){\n        yield put( signInFailure(error));\n    }\n}\n\n\nexport function* signInWithEmail({payload: { email, password }}){\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshopFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* isUserAuthenticated(){\n    try {\n        const userAuth = yield getCurrentUser();\n        if(!userAuth)return;\n        yield getSnapshopFromUserAuth(userAuth);\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* signOut(){\n    try {\n        \n    } catch (error) {\n        yield put(signOutFailure(error))\n    }\n    yield auth.signOut();\n    yield put(signOut)\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onSignOutStart(){\n    yield takeLatest(userActionTypes.SIGN_OUT_START)\n}\n\nexport function* userSaga(){\nyield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated)]);\n}"]},"metadata":{},"sourceType":"module"}