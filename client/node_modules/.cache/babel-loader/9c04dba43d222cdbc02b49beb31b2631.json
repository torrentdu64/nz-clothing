{"ast":null,"code":"import _objectSpread from \"/Users/torrent/code/nz-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDM9o5GTokE9FbTqQ9aLSj0WuQ5aTVYPb0\",\n  authDomain: \"nz-db-9c284.firebaseapp.com\",\n  databaseURL: \"https://nz-db-9c284.firebaseio.com\",\n  projectId: \"nz-db-9c284\",\n  storageBucket: \"nz-db-9c284.appspot.com\",\n  messagingSenderId: \"648810017281\",\n  appId: \"1:648810017281:web:3f7fa420629a8b0c104600\",\n  measurementId: \"G-78F8EF886H\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createAt\n      }, additionalData));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/torrent/code/nz-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","error","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AACA,OAAOA,QAAP,MAAqB,cAArB;AAEA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,6BAFD;AAGXC,EAAAA,WAAW,EAAE,oCAHF;AAIXC,EAAAA,SAAS,EAAE,aAJA;AAKXC,EAAAA,aAAa,EAAE,yBALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAc;AACd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAI,MAAMJ,OAAO,CAACK,GAAR,EAAxB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAAA,UACVC,WADU,GACaT,QADb,CACVS,WADU;AAAA,UACGC,KADH,GACaV,QADb,CACGU,KADH;AAElB,UAAMC,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDV,cAJC,EAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AACD,SAAOZ,OAAP;AAED,CAvBM;AA0BPb,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAGA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAId,QAAQ,CAACc,SAAT,EAAnB;AAEP,MAAMgB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAG;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["\nimport firebase from 'firebase/app';\n\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyDM9o5GTokE9FbTqQ9aLSj0WuQ5aTVYPb0\",\n    authDomain: \"nz-db-9c284.firebaseapp.com\",\n    databaseURL: \"https://nz-db-9c284.firebaseio.com\",\n    projectId: \"nz-db-9c284\",\n    storageBucket: \"nz-db-9c284.appspot.com\",\n    messagingSenderId: \"648810017281\",\n    appId: \"1:648810017281:web:3f7fa420629a8b0c104600\",\n    measurementId: \"G-78F8EF886H\"\n  };\n  \n  export const createUserProfileDocument = async (userAuth, additionalData) => {\n    if(!userAuth) return;\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot =  await userRef.get();\n\n    if(!snapShot.exists){\n      const { displayName, email } = userAuth;\n      const createAt = new Date();\n\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          createAt,\n          ...additionalData\n        })\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    return userRef;\n\n  }\n\n\n  firebase.initializeApp(config);\n\n\n  export const auth = firebase.auth();\n  export const firestore =  firebase.firestore();\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({prompt:  'select_account'});\n\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n  export default firebase;"]},"metadata":{},"sourceType":"module"}