{"ast":null,"code":"var _jsxFileName = \"/Users/torrent/code/nz-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollection } from '../../redux/shop/shop.actions';\nconst CollectionsOverviewWithSpinner = WithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const updateCollection = this.props.updateCollection;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSapshotToMap(snapshot);\n      updateCollection(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollection: collectionMap => dispatch(updateCollection(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/torrent/code/nz-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","WithSpinner","CollectionsOverview","CollectionPage","firestore","convertCollectionsSapshotToMap","updateCollection","CollectionsOverviewWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapShot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AAEA,MAAMC,8BAA8B,GAAGN,WAAvC;;AAEA,MAAMO,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC5B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAD4B;AAAA,SAElCC,uBAFkC,GAER,IAFQ;AAAA;;AAIlCC,EAAAA,iBAAiB,GAAE;AAAA,UACTP,gBADS,GACY,KAAKQ,KADjB,CACTR,gBADS;AAEhB,UAAMS,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,aAAa,GAAGd,8BAA8B,CAACa,QAAD,CAApD;AACAZ,MAAAA,gBAAgB,CAACa,aAAD,CAAhB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKF;;AAEJU,EAAAA,MAAM,GAAE;AAAA,UACEC,KADF,GACW,KAAKR,KADhB,CACEQ,KADF;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAErB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEoB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEpB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAtBoC;;AAyBvC,MAAMqB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnB,EAAAA,gBAAgB,EAAEa,aAAa,IAAIM,QAAQ,CAACnB,gBAAgB,CAACa,aAAD,CAAjB;AADL,CAAL,CAAnC;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport { firestore, convertCollectionsSapshotToMap } from '../../firebase/firebase.utils';\nimport {updateCollection} from '../../redux/shop/shop.actions';\n\nconst CollectionsOverviewWithSpinner = WithSpinner\n\nclass ShopPage extends React.Component {\n    state ={ loading: true }\n     unsubscribeFromSnapShot = null; \n\n     componentDidMount(){\n       const { updateCollection } = this.props;\n        const collectionRef = firestore.collection('collections');\n        collectionRef.onSnapshot(async snapshot => {\n          const collectionMap = convertCollectionsSapshotToMap(snapshot);\n          updateCollection(collectionMap);\n          this.setState({ loading: false});\n        });\n     }\n\n  render(){\n    const { match} = this.props;\n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollection: collectionMap => dispatch(updateCollection(collectionMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}