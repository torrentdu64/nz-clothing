{"ast":null,"code":"var _jsxFileName = \"/Users/torrent/code/nz-clothing/client/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport Spinner from '../../components/spinner/spinner.component';\nimport { ShopPageContainer } from './shop.styles';\nconst CollectionsOverviewContainer = lazy(() => import('../../components/collections-overview/collection-overview.container'));\nconst CollectionPageContainer = lazy(() => import('../collection/collection.container'));\nexport const ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return React.createElement(ShopPageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/torrent/code/nz-clothing/client/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","lazy","Suspense","Route","connect","fetchCollectionsStart","Spinner","ShopPageContainer","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA,OAAOC,OAAP,MAAoB,4CAApB;AAEA,SAASC,iBAAT,QAAkC,eAAlC;AAEA,MAAMC,4BAA4B,GAAGP,IAAI,CAAC,MACxC,OAAO,qEAAP,CADuC,CAAzC;AAIA,MAAMQ,uBAAuB,GAAGR,IAAI,CAAC,MACnC,OAAO,oCAAP,CADkC,CAApC;AAIA,OAAO,MAAMS,QAAQ,GAAG,CAAC;AAAEL,EAAAA,qBAAF;AAAyBM,EAAAA;AAAzB,CAAD,KAAsC;AAC5DX,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAIA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEM,KAAK,CAACC,IAAK,EAFtB;AAGE,IAAA,SAAS,EAAEJ,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBADtB;AAEE,IAAA,SAAS,EAAEH,uBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF;AAeD,CApBM;;AAsBP,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACtCT,EAAAA,qBAAqB,EAAE,MAAMS,QAAQ,CAACT,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CACpB,IADoB,EAEpBS,kBAFoB,CAAP,CAGbH,QAHa,CAAf","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\n\nimport Spinner from '../../components/spinner/spinner.component';\n\nimport { ShopPageContainer } from './shop.styles';\n\nconst CollectionsOverviewContainer = lazy(() =>\n  import('../../components/collections-overview/collection-overview.container')\n);\n\nconst CollectionPageContainer = lazy(() =>\n  import('../collection/collection.container')\n);\n\nexport const ShopPage = ({ fetchCollectionsStart, match }) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n\n  return (\n    <ShopPageContainer>\n      <Suspense fallback={<Spinner />}>\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPageContainer}\n        />\n      </Suspense>\n    </ShopPageContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ShopPage);"]},"metadata":{},"sourceType":"module"}