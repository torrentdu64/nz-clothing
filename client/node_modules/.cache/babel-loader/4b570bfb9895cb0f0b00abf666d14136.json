{"ast":null,"code":"import _objectSpread from \"/Users/torrent/code/nz-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.type';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshopFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshopFromUserAuth(user); // yield put(\n    //     signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    // );\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshopFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshopFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignOut({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshopFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START);\n}\nexport function* onSignUpSeccess() {\n  yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignOut);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/torrent/code/nz-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","userActionTypes","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshopFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSeccess","SIGN_UP_SUCCESS","userSaga"],"mappings":"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","sourcesContent":["import {takeLatest, put, all , call} from 'redux-saga/effects';\n\nimport userActionTypes from './user.type'\n\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpSuccess, signUpFailure} from './user.actions'\n\nimport { auth , googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils';\n\nexport function* getSnapshopFromUserAuth(userAuth, additionalData){\n    try{\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n        );\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* signInWithGoogle() {\n    try{\n            const {user} = yield auth.signInWithPopup(googleProvider);\n            yield getSnapshopFromUserAuth(user);\n            // yield put(\n            //     signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n            // );\n    }catch(error){\n        yield put( signInFailure(error));\n    }\n}\n\n\nexport function* signInWithEmail({payload: { email, password }}){\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshopFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* isUserAuthenticated(){\n    try {\n        const userAuth = yield getCurrentUser();\n        if(!userAuth)return;\n        yield getSnapshopFromUserAuth(userAuth);\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* signOut(){\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess())\n        \n    } catch (error) {\n        yield put(signOutFailure(error))\n    }\n}\n\nexport function* signUp({payload: { email, password, displayName}}){\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(\n            email,\n            password\n          );\n        yield  put(signUpSuccess({user, additionalData: {displayName}}))\n    } catch (error) {\n        yield put(signUpFailure(error))\n    }\n}\n\nexport function* signInAfterSignOut({payload: { user, additionalData}}){\n    yield getSnapshopFromUserAuth(user,additionalData );\n\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onSignOutStart(){\n    yield takeLatest(userActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart(){\n    yield takeLatest(userActionTypes.SIGN_UP_START, )\n}\n\nexport function* onSignUpSeccess( ) {\n    yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignOut )\n}\n\nexport function* userSaga(){\nyield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), ]);\n}"]},"metadata":{},"sourceType":"module"}