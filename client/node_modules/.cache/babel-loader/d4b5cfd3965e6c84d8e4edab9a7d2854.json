{"ast":null,"code":"var _jsxFileName = \"/Users/torrent/code/nz-clothing/client/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nconst CollectionsOverviewContainer = lazy(import('../../components/collection-overview/collection-overview.container')); // const CollectionPageContainer = lazy(\n//  import('../collection/collection.container') \n// );\n// import {fetchCollectionsStart} from '../../redux/shop/shop.actions';\n\nimport Spinner from '../../components/spinner/spinner.component';\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/torrent/code/nz-clothing/client/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","lazy","Suspense","Route","connect","CollectionsOverviewContainer","Spinner","ShopPage","fetchCollectionsStart","match","path","CollectionPageContainer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAA0BC,IAA1B,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAGA,MAAMC,4BAA4B,GAAGJ,IAAI,CACxC,OAAO,oEAAP,CADwC,CAAzC,C,CAGA;AACA;AACA;AAGA;;AAGA,OAAOK,OAAP,MAAoB,4CAApB;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,qBAAF;AAAyBC,EAAAA;AAAzB,CAAD,KAAqC;AAElDT,EAAAA,SAAS,CAAC,MAAI;AACZQ,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEC,KAAK,CAACC,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEL,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,gBAA3B;AAA4C,IAAA,SAAS,EAAEC,uBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AASH,CAlBD;;AAqBA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACvCL,EAAAA,qBAAqB,EAAE,MAAMK,QAAQ,CAACL,qBAAqB,EAAtB;AADE,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAAC,IAAD,EAAOQ,kBAAP,CAAP,CAAkCL,QAAlC,CAAf","sourcesContent":["import React,{useEffect , lazy, Suspense} from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\n\nconst CollectionsOverviewContainer = lazy(\n import('../../components/collection-overview/collection-overview.container') \n);\n// const CollectionPageContainer = lazy(\n//  import('../collection/collection.container') \n// );\n\n\n// import {fetchCollectionsStart} from '../../redux/shop/shop.actions';\n\n\nimport Spinner from '../../components/spinner/spinner.component'; \n\n\nconst ShopPage = ({ fetchCollectionsStart, match}) => {\n   \n    useEffect(()=>{\n      fetchCollectionsStart();\n    }, [fetchCollectionsStart])\n\n\n    \n    \n    return (\n      <div className='shop-page'>\n        <Suspense fallback={<Spinner/>}>\n          <Route exact path={`${match.path}`} component={CollectionsOverviewContainer}  />\n          <Route path={`${match.path}/:collectionId`} component={CollectionPageContainer} />\n        </Suspense>\n      </div>\n    );\n  \n}\n\n\nconst mapDispatchToProps = dispatch => ({\n fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}