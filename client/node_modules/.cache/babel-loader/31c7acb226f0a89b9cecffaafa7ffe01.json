{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root-reducer';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(onFetchCollectionsStart);\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/torrent/code/nz-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","onFetchCollectionsStart","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA4B,eAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAGA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AACtCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBR,MAAjB;AACH;;AAED,MAAMS,KAAK,GAAGZ,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGM,WAAJ,CAA7B,CAAzB;AAECD,cAAc,CAACO,GAAf,CAAmBC,uBAAnB;AAED,MAAMC,SAAS,GAAGb,YAAY,CAACU,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBG,SAAhB","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { persistStore} from 'redux-persist';\nimport logger from 'redux-logger';\n\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './root-reducer';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n\nconst middlewares = [sagaMiddleware];\n\nif(process.env.NODE_ENV === 'development'){\n    middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n sagaMiddleware.run(onFetchCollectionsStart)\n\nconst persistor = persistStore(store);\n\nexport  {store, persistor};\n"]},"metadata":{},"sourceType":"module"}