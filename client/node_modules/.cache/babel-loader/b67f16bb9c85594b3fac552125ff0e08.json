{"ast":null,"code":"var _jsxFileName = \"/Users/torrent/code/nz-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport CollectionPageContainer from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          IsCollectionsLoaded = _this$props.IsCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !IsCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  IsCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/torrent/code/nz-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","selectIsCollectionsLoaded","connect","WithSpinner","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStartAsync","CollectionPageWithSpinner","CollectionPage","ShopPage","Component","componentDidMount","props","render","match","IsCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAUC,wBAAV,QAAyC,UAAzC;AACA,SAASC,yBAAT,QAA0C,iCAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,4BAAP,MAAyC,oEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AAGA,SAAQC,0BAAR,QAAyC,+BAAzC;AAGA,MAAMC,yBAAyB,GAAGJ,WAAW,CAACK,cAAD,CAA7C;;AAGA,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAG;AAAA,UACVL,0BADU,GACqB,KAAKM,KAD1B,CACVN,0BADU;AAElBA,IAAAA,0BAA0B;AAC3B;;AAGHO,EAAAA,MAAM,GAAE;AAAA,wBACgC,KAAKD,KADrC;AAAA,UACEE,KADF,eACEA,KADF;AAAA,UACSC,mBADT,eACSA,mBADT;AAGN,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEZ,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEU,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAIJ,KAAD,IAAW,oBAAC,yBAAD;AAA4B,QAAA,SAAS,EAAE,CAACG;AAAxC,SAAkEH,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAjBoC;;AAmBvC,MAAMK,eAAe,GAAIjB,wBAAwB,CAAC;AAChDe,EAAAA,mBAAmB,EAAEd;AAD2B,CAAD,CAAjD;;AAIA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACvCb,EAAAA,0BAA0B,EAAE,MAAMa,QAAQ,CAACb,0BAA0B,EAA3B;AADH,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport {  createStructuredSelector} from 'reselect'\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport { connect } from 'react-redux';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport CollectionsOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport CollectionPageContainer from '../collection/collection.component';\n\n\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\n\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n\nclass ShopPage extends React.Component {\n   \n    componentDidMount() {\n      const { fetchCollectionsStartAsync } = this.props;\n      fetchCollectionsStartAsync();\n    }\n    \n\n  render(){\n    const { match, IsCollectionsLoaded} = this.props;\n    \n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} component={CollectionsOverviewContainer}  />\n        <Route path={`${match.path}/:collectionId`} render={ (props) => <CollectionPageWithSpinner  isLoading={!IsCollectionsLoaded}  {...props} /> } />\n      </div>\n    );\n  }\n}\nconst mapStateToProps =  createStructuredSelector({\n  IsCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}